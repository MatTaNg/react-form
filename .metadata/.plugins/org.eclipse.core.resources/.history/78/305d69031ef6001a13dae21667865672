package security;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Map;

import javax.annotation.PostConstruct;

import org.springframework.beans.factory.annotation.Value;

import com.amazonaws.auth.AWSCredentials;
import com.amazonaws.auth.BasicAWSCredentials;
import com.amazonaws.services.s3.AmazonS3;
import com.amazonaws.services.s3.AmazonS3Client;
import com.amazonaws.services.s3.model.S3Object;
import com.amazonaws.services.s3.model.S3ObjectInputStream;
import com.amazonaws.util.StringUtils;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.reactform.backend.reactformbackend.Account;

@Service
public class AmazonS3Service {

    private AmazonS3 s3client;

    @Value("${amazonProperties.endpointUrl}")
    private String endpointUrl;
    @Value("${amazonProperties.bucketName}")
    private String bucketName;
    @Value("${amazonProperties.accessKey}")
    private String accessKey;
    @Value("${amazonProperties.secretKey}")
    private String secretKey;
    
	@PostConstruct
    private void initializeAmazon() {
       AWSCredentials credentials = new BasicAWSCredentials(this.accessKey, this.secretKey);
       this.s3client = new AmazonS3Client(credentials);
	}
	
	public Map<String, Account> getAllAccounts() {
		//Read the file
		  S3Object s3object = s3client.getObject(bucketName, "accounts.txt");
		  S3ObjectInputStream inputStream = s3object.getObjectContent();
		  String str;
		try {
			str = getAsString(inputStream);
		    //Parse data in s3
		    ObjectMapper mapper = new ObjectMapper();
		    Map<String, Account> accounts = mapper.readValue(str, Map.class);
		    return accounts;
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null;
	}
	
	  private static String getAsString(S3ObjectInputStream is) throws IOException {
		    if (is == null)
		        return "";
		    StringBuilder sb = new StringBuilder();
		    try {
		        BufferedReader reader = new BufferedReader(
		                new InputStreamReader(is, StringUtils.UTF8));
		        String line;
		        while ((line = reader.readLine()) != null) {
		            sb.append(line);
		        }
		    } finally {
		        is.close();
		    }
		    return sb.toString();
		}
	
}
